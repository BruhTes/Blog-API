{
  "info": {
    "name": "Blog API",
    "description": "Complete API collection for the Blog platform. Includes authentication, user management, blog operations, and AI-powered features.",
    "_postman_id": "2b1c7e9e-7e3c-4b9c-bf4b-7d02a3f56b9f",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-set Authorization header for authenticated requests",
          "if (pm.collectionVariables.get('authToken')) {",
          "  pm.request.headers.add({",
          "    key: 'Authorization',",
          "    value: 'Bearer ' + pm.collectionVariables.get('authToken')",
          "  });",
          "}"
        ]
      }
    }
  ],
  "variable": [
    { "key": "baseUrl", "value": "http://localhost:8080", "type": "string" },
    { "key": "authToken", "value": "", "type": "string" },
    { "key": "refreshToken", "value": "", "type": "string" },
    { "key": "blogId", "value": "", "type": "string" },
    { "key": "commentId", "value": "", "type": "string" },
    { "key": "userId", "value": "", "type": "string" },
    { "key": "provider", "value": "google", "type": "string" },
    { "key": "code", "value": "", "type": "string" },
    { "key": "state", "value": "", "type": "string" },
    { "key": "token", "value": "", "type": "string" },
    { "key": "page", "value": "1", "type": "string" },
    { "key": "limit", "value": "10", "type": "string" }
  ],
  "item": [
    {
      "name": "Authentication",
      "description": "User authentication and authorization endpoints including registration, login, token refresh, email verification, and password management.",
      "item": [
        {
          "name": "Register",
          "description": "Create a new user account with username, email, and password.",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "register"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"test@example.com\",\n  \"password\": \"P@ssw0rd!\"\n}"
            }
          }
        },
        {
          "name": "Login",
          "description": "Authenticate user and receive access and refresh tokens.",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "login"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"P@ssw0rd!\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('200 OK', function () { pm.response.to.have.status(200); });",
                  "var json = {}; try { json = pm.response.json(); } catch (e) {}",
                  "if (json && json.access_token) pm.collectionVariables.set('authToken', json.access_token);",
                  "if (json && json.refresh_token) pm.collectionVariables.set('refreshToken', json.refresh_token);"
                ]
              }
            }
          ]
        },
        {
          "name": "Refresh Token",
          "description": "Get new access token using refresh token.",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "refresh"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refreshToken}}\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var json = {}; try { json = pm.response.json(); } catch (e) {}",
                  "if (json && json.access_token) pm.collectionVariables.set('authToken', json.access_token);"
                ]
              }
            }
          ]
        },
        {
          "name": "Send Verification Email",
          "description": "Request email verification for account activation.",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/send-verification",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "send-verification"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\"\n}"
            }
          }
        },
        {
          "name": "Verify Email",
          "description": "Verify email address using token from verification email.",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/verify-email?token={{token}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "verify-email"],
              "query": [{ "key": "token", "value": "{{token}}" }]
            }
          }
        },
        {
          "name": "Forgot Password",
          "description": "Request password reset email.",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/forgot-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "forgot-password"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\"\n}"
            }
          }
        },
        {
          "name": "Reset Password",
          "description": "Reset password using token from reset email.",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/reset-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "reset-password"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"<paste_token_here>\",\n  \"new_password\": \"NewP@ssw0rd!\"\n}"
            }
          }
        },
        {
          "name": "Logout",
          "description": "Logout user and invalidate current session (requires authentication).",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "logout"]
            }
          }
        },
        {
          "name": "OAuth Login",
          "description": "Initiate OAuth login flow with specified provider (Google, GitHub, etc.).",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/{{provider}}/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "{{provider}}", "login"]
            }
          }
        },
        {
          "name": "OAuth Callback",
          "description": "Handle OAuth callback from provider after successful authentication.",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/{{provider}}/callback?code={{code}}&state={{state}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "{{provider}}", "callback"],
              "query": [
                { "key": "code", "value": "{{code}}" },
                { "key": "state", "value": "{{state}}" }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "User Management",
      "description": "User profile management, profile picture upload, and account operations.",
      "item": [
        {
          "name": "Get Profile",
          "description": "Retrieve current user's profile information (requires authentication).",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "users", "profile"]
            }
          }
        },
        {
          "name": "Update Profile",
          "description": "Update user profile information (requires authentication).",
          "request": {
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "users", "profile"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"updateduser\",\n  \"email\": \"updated@example.com\",\n  \"bio\": \"About me...\"\n}"
            }
          }
        },
        {
          "name": "Upload Profile Picture",
          "description": "Upload profile picture (JPG/PNG, max 5MB, requires authentication).",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/profile/picture",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "users", "profile", "picture"]
            },
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "profile_picture",
                  "type": "file",
                  "src": []
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Admin Operations",
      "description": "Administrative functions for user role management (admin only).",
      "item": [
        {
          "name": "Promote User to Admin",
          "description": "Promote a user to admin role (admin only).",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/api/v1/admin/users/{{userId}}/promote",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "admin", "users", "{{userId}}", "promote"]
            }
          }
        },
        {
          "name": "Demote Admin to User",
          "description": "Demote an admin user to regular user role (admin only).",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/api/v1/admin/users/{{userId}}/demote",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "admin", "users", "{{userId}}", "demote"]
            }
          }
        }
      ]
    },
    {
      "name": "Blog Management",
      "description": "Complete blog CRUD operations, search, filtering, comments, and reactions.",
      "item": [
        {
          "name": "List Blogs",
          "description": "Get paginated list of all blogs with sorting options.",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs?page={{page}}&limit={{limit}}&sort=newest",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "blogs"],
              "query": [
                { "key": "page", "value": "{{page}}" },
                { "key": "limit", "value": "{{limit}}" },
                { "key": "sort", "value": "newest" }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var json = {}; try { json = pm.response.json(); } catch (e) {}",
                  "if (json && json.data && Array.isArray(json.data) && json.data.length) {",
                  "  var b = json.data[0];",
                  "  var id = b.id || b._id;",
                  "  if (id) pm.collectionVariables.set('blogId', id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Blog by ID",
          "description": "Retrieve a specific blog by its ID.",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs/{{blogId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "blogs", "{{blogId}}"]
            }
          }
        },
        {
          "name": "Popular Blogs",
          "description": "Get list of most popular blogs based on engagement.",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs/popular?limit=5",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "blogs", "popular"],
              "query": [{ "key": "limit", "value": "5" }]
            }
          }
        },
        {
          "name": "Search by Title",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs/search/title?title=hello&page=1&limit=5",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "blogs", "search", "title"],
              "query": [
                { "key": "title", "value": "hello" },
                { "key": "page", "value": "1" },
                { "key": "limit", "value": "5" }
              ]
            }
          }
        },
        {
          "name": "Search by Author",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs/search/author?author=testuser&page=1&limit=5",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "blogs", "search", "author"],
              "query": [
                { "key": "author", "value": "testuser" },
                { "key": "page", "value": "1" },
                { "key": "limit", "value": "5" }
              ]
            }
          }
        },
        {
          "name": "Filter by Tags",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs/filter/tags?tags=go,golang&page=1&limit=5",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "blogs", "filter", "tags"],
              "query": [
                { "key": "tags", "value": "go,golang" },
                { "key": "page", "value": "1" },
                { "key": "limit", "value": "5" }
              ]
            }
          }
        },
        {
          "name": "Filter by Date",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs/filter/date?startDate=2025-01-01&endDate=2025-12-31&page=1&limit=5",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "blogs", "filter", "date"],
              "query": [
                { "key": "startDate", "value": "2025-01-01" },
                { "key": "endDate", "value": "2025-12-31" },
                { "key": "page", "value": "1" },
                { "key": "limit", "value": "5" }
              ]
            }
          }
        },
        {
          "name": "Create Blog",
          "description": "Create a new blog post (requires authentication).",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs/",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "blogs", ""]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Hello World\",\n  \"content\": \"This is a blog post body...\",\n  \"tags\": [\"go\", \"gin\"]\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var json = {}; try { json = pm.response.json(); } catch (e) {}",
                  "if (json && json.blog && (json.blog.id || json.blog._id)) {",
                  "  pm.collectionVariables.set('blogId', json.blog.id || json.blog._id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Blog",
          "description": "Update an existing blog post (requires authentication, author or admin only).",
          "request": {
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs/{{blogId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "blogs", "{{blogId}}"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Title\"\n}"
            }
          }
        },
        {
          "name": "Delete Blog",
          "description": "Delete a blog post (requires authentication, author or admin only).",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs/{{blogId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "blogs", "{{blogId}}"]
            }
          }
        },
        {
          "name": "Add Comment (auth)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs/{{blogId}}/comments",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "blogs", "{{blogId}}", "comments"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Nice post!\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var json = {}; try { json = pm.response.json(); } catch (e) {}",
                  "if (json && json.comment && (json.comment.id || json.comment._id)) {",
                  "  pm.collectionVariables.set('commentId', json.comment.id || json.comment._id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Comment (auth)",
          "request": {
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs/{{blogId}}/comments/{{commentId}}",
              "host": ["{{baseUrl}}"],
              "path": [
                "api",
                "v1",
                "blogs",
                "{{blogId}}",
                "comments",
                "{{commentId}}"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Edited comment\"\n}"
            }
          }
        },
        {
          "name": "Delete Comment (auth)",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs/{{blogId}}/comments/{{commentId}}",
              "host": ["{{baseUrl}}"],
              "path": [
                "api",
                "v1",
                "blogs",
                "{{blogId}}",
                "comments",
                "{{commentId}}"
              ]
            }
          }
        },
        {
          "name": "Like Blog (auth)",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs/{{blogId}}/like",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "blogs", "{{blogId}}", "like"]
            }
          }
        },
        {
          "name": "Dislike Blog (auth)",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs/{{blogId}}/dislike",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "blogs", "{{blogId}}", "dislike"]
            }
          }
        }
      ]
    },
    {
      "name": "AI Features",
      "description": "AI-powered blog generation, enhancement, and idea suggestions.",
      "item": [
        {
          "name": "Generate Blog",
          "description": "Generate blog content using AI based on a topic (requires authentication).",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/ai/generate-blog",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "ai", "generate-blog"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"topic\": \"Generate a Go tutorial outline\"\n}"
            }
          }
        },
        {
          "name": "Enhance Blog",
          "description": "Get AI suggestions to improve existing blog content (requires authentication).",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/ai/enhance-blog",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "ai", "enhance-blog"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Current content that needs enhancement. This should be at least 50 characters long to meet the validation requirements.\"\n}"
            }
          }
        },
        {
          "name": "Suggest Blog Ideas",
          "description": "Get AI-generated blog topic suggestions based on keywords (requires authentication).",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/ai/suggest-ideas",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "ai", "suggest-ideas"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"keywords\": [\"go\", \"microservices\", \"tutorial\"]\n}"
            }
          }
        }
      ]
    }
  ]
}
